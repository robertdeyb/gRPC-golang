syntax = "proto3";
package greet;
//location of the packet you want to implement
option go_package="./calculator/calculatorpb";

message Calculate {
    int64 first_num = 1;
    int64 last_num = 2;
}

message CalculatorRequest {
    Calculate calculate = 1;
}

message CalculatorResponse {
    int64 result = 1;
}


message PrimeNumberDecompositionRequest {
    int64 number = 1;
}

message PrimeNumberDecompositionResponse {
    int64 prime_factor = 1;
}


message ComputeAverageRequest {
    int32 number = 1;
}

message ComputeAverageResponse {
    double average = 1;
}

message FindMaximumRequest {
    int32 number = 1;
}

message FindMaximumResponse {
    int32 maximum_number = 1;
}

message SquareRootRequest {
    int32 number = 1;
}

message SquareRootResponse {
    double number_root = 1;
}

service CalculatorService {
    //Unary name Calculate
    rpc Calculator(CalculatorRequest) returns (CalculatorResponse) {};

    //Server Streaming
    rpc PrimeNumberDecomposition(PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse) {};

    //Client Streaming
    rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse){};
    //BiDi Streaming
    rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse){};
    //error handling
    //will throw error when number is negative
    //error will be sent as INVALID ARGUMENT
    rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {};

}

